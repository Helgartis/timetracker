cmake_minimum_required(VERSION 3.16)

project(time-tracker VERSION 0.1 LANGUAGES CXX)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# üîç –ù–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω—ã–µ –º–æ–¥—É–ª–∏
find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets Charts)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets Charts)

set(PROJECT_SOURCES
    main.cpp
    mainwindow.cpp
    mainwindow.h
    mainwindow.ui
    event.h
    eventdialog.cpp
    eventdialog.h
    eventdialog.ui
    analysisdialog.cpp
    analysisdialog.h
    analysisdialog.ui
)

# üî® –°–æ–∑–¥–∞—ë–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª
if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    qt_add_executable(time-tracker
        MANUAL_FINALIZATION
        ${PROJECT_SOURCES}
    )
else()
    if(ANDROID)
        add_library(time-tracker SHARED ${PROJECT_SOURCES})
    else()
        add_executable(time-tracker ${PROJECT_SOURCES})
    endif()
endif()

# üîó –õ–∏–Ω–∫—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Qt
target_link_libraries(time-tracker
    PRIVATE
        Qt${QT_VERSION_MAJOR}::Widgets
        Qt${QT_VERSION_MAJOR}::Charts
)

# ‚öôÔ∏è –°–≤–æ–π—Å—Ç–≤–∞ —Å–±–æ—Ä–∫–∏
set_target_properties(time-tracker PROPERTIES
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

# üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞
include(GNUInstallDirs)
install(TARGETS time-tracker
    BUNDLE DESTINATION .
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

# ‚úÖ –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è Qt6
if(QT_VERSION_MAJOR EQUAL 6)
    qt_finalize_executable(time-tracker)
endif()
